{"version":3,"sources":["redux/actions.js","redux/reducer.js","components/Header.js","components/Sidebar.js","components/ProjectsGrid.js","pages/Home.js","components/StudentList.js","components/ProjectForm.js","pages/CreateProject.js","components/TaskForm.js","components/TasksGrid.js","pages/EditProject.js","components/Main.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["ADD_PROJECT","EDIT_PROJECT","DELETE_PROJECT","addProjectAction","data","type","payload","editProjectAction","deleteProjectAction","id","initialDataState","projects","title","description","finish_date","student_list","adviser","state","tasks","name","reducer","combineReducers","action","filter","project","projectId","form","reduxFormReducer","Header","className","Sidebar","to","ProjectsGrid","map","i","key","icon","faEdit","join","withRouter","connect","props","dispatch","actions","bindActionCreators","Fragment","StudentList","input","value","onChange","useState","studentArray","setStudentArray","updateList","list","htmlFor","onKeyDown","e","newList","target","preventDefault","placeholder","onClick","splice","removeStudent","faTrash","reduxForm","projectInfo","handleSubmit","pristine","submitting","onSubmit","Field","component","rows","disabled","CreateProject","history","useHistory","values","Math","random","toString","substr","alert","push","TaskForm","handleTaskCreation","taskInfo","setTaskInfo","onChangeHandler","TasksGrid","taks","find","p","match","params","projectData","setProjectData","initialValues","projectFormData","Main","path","Content","App","Boolean","window","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.344d6e98.chunk.js","sourcesContent":["/*\n * action types\n */\n\nexport const ADD_PROJECT = 'ADD_PROJECT'\nexport const EDIT_PROJECT = 'EDIT_PROJECT'\nexport const DELETE_PROJECT = 'DELETE_PROJECT'\n\n/*\n * action creators\n */\n\nexport function addProjectAction(data) {\n  return { type: ADD_PROJECT, payload: data }\n}\n\nexport function editProjectAction(data) {\n  return { type: EDIT_PROJECT, payload: data }\n}\n\nexport function deleteProjectAction(id) {\n  return { type: DELETE_PROJECT, payload: { id } }\n}\n","import { combineReducers } from 'redux'\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nimport {\n  ADD_PROJECT,\n  EDIT_PROJECT,\n  DELETE_PROJECT,\n} from './actions'\n\nconst initialDataState = {\n  projects: [\n    {\n      id: 1,\n      title: \"Vivencias académicas de los ECAES\",\n      description: \"Esta investigación de corte etnográfico describe las principales acciones y consecuencias académicas que, de cara a los Exámenes de Calidad de la Educación Superior en Colombia (ECAES), están sucediendo\",\n      finish_date: \"2020-12-31\",\n      student_list: [\"Luisa Fernanda Cano\", \"Alejandro Cardenas\", \"Jose Gabriel\", \"Nelson Fernando\"],\n      adviser: \"Profesor Asesor\",\n      state: \"En proceso\",\n      tasks: [\n        {\n          id: 1,\n          name: \"Tarea 1\",\n          description: \"Descripcion de la tarea\",\n          finish_date: \"2020-04-04\"\n        }\n      ]\n    }\n  ]\n};\n\nfunction data(state = initialDataState, action) {\n  switch (action.type) {\n    case ADD_PROJECT: {\n      const data = action.payload;\n\n      return {\n        ...state,\n        projects: [\n          ...state.projects,\n          data\n        ]\n      }\n    }\n    case EDIT_PROJECT: {\n      const data = action.payload;\n\n      const projects = state.projects.filter((project) => {\n        return project.id !== data.id\n      });\n\n      return {\n        ...state,\n        projects: [\n          ...projects,\n          data\n        ]\n      }\n    }\n    case DELETE_PROJECT: {\n      const id = action.payload.id;\n\n      const projects = state.projects.filter((projectId) => {\n        return projectId !== id\n      });\n\n      return {\n        projects: projects\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst reducer = combineReducers({\n  data,\n  form: reduxFormReducer\n});\n\nexport default reducer\n","import React from 'react';\n\nfunction Header() {\n  return (\n    <header className=\"z-40 shadow-xs p-6 bg-white shadow-bottom\">\n      Gestión de Proyectos de Grado\n    </header>\n  )\n}\n\nexport default Header","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar() {\n  return (\n    <aside className=\"border p-3 m-2 min-h-full w-full md:w-64\">\n      <ul className=\"flex flex-row md:flex-col\">\n        <li className=\"mr-3\">\n          <Link to=\"/\">Ver Proyectos</Link>\n        </li>\n        <li>\n          <Link to=\"/crear-proyecto\">Crear Proyecto</Link>\n        </li>\n      </ul>\n    </aside>\n  )\n}\n\nexport default Sidebar","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nfunction ProjectsGrid({projects}) {\n  return (\n    <div className=\"grid grid-flow-row grid-cols-1 md:grid-cols-3 grid-rows-3 gap-4\">\n      {projects && projects.map((project, i) => (\n      <div className=\"md:max-w-md rounded overflow-hidden shadow-lg\" key={i}>\n        <div className=\"px-6 py-4\">\n            <div className=\"font-bold text-xl mb-2 flex justify-between\">\n              {project.title}\n              <Link to={`/editar-proyecto/${project.id}`}>\n                <FontAwesomeIcon icon={faEdit} />\n              </Link>\n            </div>\n            <p className=\"text-gray-700 text-base\">\n              Asesor: {project.adviser}\n            </p>\n            <p className=\"text-gray-700 text-base\">\n              Estudiantes: {project.student_list.join(\" - \")}\n            </p>\n        </div>\n        <div className=\"px-6 pt-4 pb-2\">\n          <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n            {project.state}\n          </span>\n        </div>\n      </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ProjectsGrid","import React from 'react';\n\nimport ProjectsGrid from '../components/ProjectsGrid';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport  * as actions from '../redux/actions';\nimport { withRouter } from 'react-router-dom';\n\nfunction Home({projects}) {\n  return (\n    <React.Fragment>\n      <h1 className=\"text-center text-3xl font-semibold\">Lista de Proyectos</h1>\n      <ProjectsGrid projects={projects} />\n    </React.Fragment>\n  )\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    projects: state.data.projects\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nfunction StudentList(props) {\n  const {\n    input: { value, onChange }\n  } = props\n\n  const [studentArray, setStudentArray] = useState( value || [] );\n\n  const updateList = (list) => {\n    onChange(list)\n  }\n\n  const onSearchStudent = (e) => {\n    if (e.key === 'Enter') {\n      const newList = [\n        ...studentArray,\n        e.target.value\n      ]\n      setStudentArray(newList)\n      updateList(newList)\n      e.target.value = ''\n\n      e.preventDefault()\n    }\n  }\n\n  const removeStudent = (id) => {\n    let list = [...studentArray]\n    list.splice(id, 1)\n    setStudentArray(list);\n    updateList(list)\n  }\n\n  return (\n    <React.Fragment>\n      <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"grid-city\">\n        Seleccionar estudiantes\n      </label>\n      <input onKeyDown={onSearchStudent} className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" type=\"text\" placeholder=\"Ingrese el nombre del estudiante\" />\n      <ul className=\"mt-2\">\n        {studentArray.map((name, i)=>(\n          <li key={i} className=\"border p-2 flex justify-between\">{name} <FontAwesomeIcon onClick={()=>{removeStudent(i)}} icon={faTrash} /></li>\n        ))}\n      </ul>\n    </React.Fragment>\n  )\n}\n\nexport default StudentList","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport StudentList from './StudentList';\n\nfunction ProjectForm({projectInfo = {}, handleSubmit, pristine, submitting }) {\n\n  return (\n    <form className=\"w-full max-w-6xl m-auto mt-8\" onSubmit={handleSubmit}>\n      <div className=\"flex flex-wrap -mx-3 mb-6\">\n        <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n          <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"grid-first-name\">\n            Nombre del Proyecto\n          </label>\n          <Field\n            name=\"title\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Nombre de Proyecto\"\n            className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          />\n        </div>\n        <div className=\"w-full md:w-1/2 px-3\">\n          <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"grid-last-name\">\n            Fecha de Entrega\n          </label>\n          <Field\n            name=\"finish_date\"\n            component=\"input\"\n            type=\"date\"\n            className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-wrap -mx-3 mb-6\">\n        <div className=\"w-full md:w-1/2 px-3\">\n          <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"grid-password\">\n            Descripción del Proyecto\n          </label>\n          <Field\n            name=\"description\"\n            component=\"textarea\"\n            rows=\"10\"\n            className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          />\n        </div>\n        <div className=\"w-full md:w-1/2 px-3\">\n          <Field\n            name=\"student_list\"\n            component={StudentList}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-wrap -mx-3\">\n        <div className=\"w-full md:w-full px-3\">\n          <button type=\"submit\" disabled={pristine || submitting} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">\n            Guardar\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'project', // a unique identifier for this form\n})(ProjectForm);","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport ProjectForm from '../components/ProjectForm';\nimport { addProjectAction } from '../redux/actions';\n\nfunction CreateProject() {\n  let history = useHistory();\n\n  const handleSave = (values, dispatch) => {\n    let project =  {\n      id: Math.random().toString(36).substr(2, 9),\n      title: values.title,\n      description: values.description,\n      finish_date: values.finish_date,\n      student_list: values.student_list || [],\n      adviser: \"Profesor Logeado\",\n      state: \"En proceso\",\n      tasks: []\n    }\n\n    dispatch(addProjectAction(project))\n    alert(\"Tu Proyecto fue creado correctamente\")\n    history.push('/')\n  }\n\n  return (\n    <React.Fragment>\n      <h1 className=\"text-center text-3xl font-semibold\">Crear Proyecto</h1>\n      <ProjectForm  onSubmit={handleSave} />\n    </React.Fragment>\n  )\n}\n\nexport default CreateProject\n","import React, { useState } from 'react';\n\nfunction TaskForm({handleTaskCreation}) {\n\n  const [taskInfo, setTaskInfo] = useState({\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    finish_date: \"\"\n  })\n\n  function sendTask() {\n    handleTaskCreation(taskInfo)\n  }\n  function onChangeHandler(e) {\n    setTaskInfo({\n      ...taskInfo,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  return (\n    <form className=\"w-full max-w-6xl m-auto mt-8\">\n      <div className=\"flex flex-wrap -mx-3 mb-6\">\n        <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n          <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"name\">\n            Nombre de la Tarea\n          </label>\n          <input onChange={onChangeHandler} name=\"name\" value={taskInfo.name} className=\"appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\" type=\"text\" />\n\n          <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"finish_date\">\n            Fecha de Límite\n          </label>\n          <input onChange={onChangeHandler} name=\"finish_date\" value={taskInfo.finish_date} className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" type=\"date\" />\n        </div>\n        <div className=\"w-full md:w-1/2 px-3\">\n          <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"description\">\n            Descripción del Proyecto\n          </label>\n          <textarea onChange={onChangeHandler} name=\"description\" value={taskInfo.description} rows=\"6\" className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n          </textarea>\n        </div>\n      </div>\n      <div className=\"flex flex-wrap -mx-3\">\n        <div className=\"w-full md:w-full px-3\">\n          <button onClick={sendTask} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n              Crear Tarea\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default TaskForm","import React from 'react';\n// import { Link } from \"react-router-dom\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nfunction TasksGrid({tasks}) {\n  return (\n    <div className=\"grid grid-flow-row md:grid-cols-3 grid-cols-1 grid-rows-3 gap-4\">\n      {tasks && tasks.map((taks, i) => (\n      <div className=\"max-w-md rounded overflow-hidden shadow-lg\" key={i}>\n        <div className=\"px-6 py-4\">\n            <div className=\"font-bold text-xl mb-2 flex justify-between\">\n              { taks.name }\n              {/* <Link to={`/editar-proyecto/${i}`}>\n                <FontAwesomeIcon icon={faEdit} />\n              </Link> */}\n            </div>\n            <p className=\"text-gray-700 text-base\">\n            { taks.description }\n            </p>\n        </div>\n        <div className=\"px-6 pt-4 pb-2\">\n          <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n            Fecha límite { taks.finish_date }\n          </span>\n        </div>\n      </div>\n      ))}\n    </div>\n  )\n}\n\nexport default TasksGrid","import React, { useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport  * as actions from '../redux/actions';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport ProjectForm from '../components/ProjectForm';\nimport TaskForm from '../components/TaskForm';\nimport TasksGrid from '../components/TasksGrid';\n\nfunction EditProject({project, actions, dispatch}) {\n  const [projectData, setProjectData] = useState(project)\n\n  const handleSave = (values, dispatch) => {\n    let projectFormData =  {\n      id: project.id,\n      title: values.title,\n      description: values.description,\n      finish_date: values.finish_date,\n      student_list: values.student_list || [],\n      adviser: \"Profesor Logeado\",\n      state: \"En proceso\",\n      tasks: project.tasks\n    }\n\n    setProjectData(projectFormData)\n    dispatch(actions.editProjectAction(projectFormData))\n    alert(\"Tu Proyecto fue actualizado correctamente\")\n  }\n\n  const handleTaskCreation = (data) => {\n    let projectFormData =  {\n      ...projectData,\n      tasks: [\n        ...projectData.tasks,\n        data\n      ]\n    }\n\n    setProjectData(projectFormData)\n    dispatch(actions.editProjectAction(projectFormData))\n    alert(\"La tarea fue creada correctamente\")\n  }\n\n  if (!project) return (<Redirect to=\"/\" />)\n\n  return (\n    <React.Fragment>\n      <h1 className=\"text-center text-3xl font-semibold\">Editar Proyecto</h1>\n      <ProjectForm initialValues={project} onSubmit={handleSave} />\n      <h2 className=\"text-center text-3xl font-semibold\">Tareas del Proyecto</h2>\n      <TaskForm handleTaskCreation={handleTaskCreation} />\n      <div className=\"w-full max-w-6xl m-auto mt-8\">\n        <TasksGrid tasks={projectData.tasks || []} />\n      </div>\n    </React.Fragment>\n  )\n}\n\nfunction mapStateToProps(state, props) {\n  const project = state.data.projects.find((p) => p.id == props.match.params.id)\n\n  return {\n    project: project\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    dispatch\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditProject));\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from './../pages/Home';\nimport CreateProject from './../pages/CreateProject';\nimport EditProject from './../pages/EditProject';\n\nfunction Main() {\n  return (\n    <main className=\"border p-3 m-2 flex-grow\">\n      <Switch>\n          <Route path=\"/crear-proyecto\">\n            <CreateProject />\n          </Route>\n          <Route path=\"/editar-proyecto/:id\">\n            <EditProject />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n      </Switch>\n    </main>\n  )\n}\n\nexport default Main","import React from 'react';\n\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\nfunction Content() {\n  return (\n    <div className=\"p-5 flex flex-col md:flex-row\">\n      <Sidebar />\n      <Main />\n    </div>\n  )\n}\n\nexport default Content","import React from 'react';\nimport './tailwind.output.css';\nimport { HashRouter, BrowserRouter as Router} from 'react-router-dom'\n\nimport Header from './components/Header';\nimport Content from './components/Content';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Header />\n        <Content />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose } from 'redux';\nimport reducer from './redux/reducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}